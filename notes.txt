Commands are used for state changes
Events are statements of fact about what change has been made to the state
There should be a single command handler per command
Commands can emit any number of Events

How should the game loop look like?
    while(playing) {
        dungeon.state.update()
            --> ProcessingState updates all entities
            --> PlayerTurnState does nothing, handles input for the player when it is their turn
            --> Autoexplore state updates all entities, handles input for the player to cancel
            --> Targeting state does nothing, handles input to move the cursor
    }



What events exist and how does everything work together?
- DamageEvent ([Target] takes [Amount] of damage from [Source])
- OnHitEvent ([Target] hit by [Source])
- CombatInstigated ([Source] instigates combat against [Target])

Should there be an Attack object?
    - Power
    - Damage Type(s)
    - Source?
    - Target?

How should items work?
    - Modifiers that grant constant attribute bonuses
        - e.g. +5 Strength
    - Modifiers that grant event-based bonuses
        - e.g. +5 damage to Goblins
    - Base [CombatStats] -> Rename to weapon?
        ToHit, Power
    - Base [Armor]
        AC, EV
    - Stackable (Quantity)
        - Arrows, weapons in general?
    - Consumable?
        - Potions, etc

There should be triggers on certain events/conditions
    - Effect (intrinsic effect or triggered)
    - Condition (target meets certain criteria, source meets certain criteria)

THERE SHOULD BE TRIGGERS THAT TRIGGER ON EVENT::CLASS
    - e.g. Triggers[DamageEvent::Class]. Figure it out from entity actions.


What goes in to an entity?
Player:
    Types:
        Combatant
        ItemHolder
    Attributes:
        PlayerFlag
        Health
        BlockOccupier (can't move through this)
        Inventory
        Equipment
        EntityPosition
        EntityTile (tile used to draw in game)
        FieldOfView
        EntityActions
            - Attack
            - Open Door
        // TODO
        Mana
        Energy (for turn system?)
        Experience
        Stats
    Systems:
        ItemPicker (pick up item)
        ItemDropper (drop item)
        FieldOfViewSystem (Update FOV)
        CombatSystem

HealthPotion
    Types:
        Item
    Attributes:
        EntityTile
        EntityPosition (conditionally)
        // TODO
        Stackable
        Consumable

How should doors work?
    - When OpenDoor event is thrown, remove the ClosedDoor entity and replace with open door entity
    - When CloseDoor event is thrown, remove OpenDoor entity and replace with closed door entity
    - What about LockedDoors? TBD

How should CharacterAttributes work?
    - Character has StatBlockAttribute (base stats)
        - How is this different than below?
    - Effects can have StatBlockAttribute & operater
        E.g. StrengthBonusEffect:
                    attr = StatBlockAttribute(
                        strength = 5)
                    operator = MULTIPLICATION
    - How to handle a Helmet which grants an effect that multiplies strength?
        -> Does it even need to be added to the equippers effect list? Instead, some calculateAttr function could
            loop through equipped items & get effects from that.

    - Helment of dumb and strong:
        Helment
            Effects = listOf(
                Effect(attr = StatBlockAttribute(strength = 5), operator = +),
                Effect(attr = StatBlockAttribute(intelligence = -5), operator = +)
            )
    - Reflect Damage Shield
        Shield
            Effects = listOf(
                TriggeredEffect(trigger = OnDamageEvent, function = {}, condition = ALWAYS)
            )


Game State TODO:
-